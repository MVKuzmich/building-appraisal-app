name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_BACKEND_IMAGE: mikhailkuzmich/building-appraisal-app-backend
  DOCKER_FRONTEND_IMAGE: mikhailkuzmich/building-appraisal-app-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build Backend with Maven
      run: mvn -B package -DskipTests --file backend/pom.xml

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Build Frontend
      working-directory: ./frontend
      run: |
        npm ci
        CI=false npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./backend/Dockerfile
        push: true
        tags: ${{ env.DOCKER_BACKEND_IMAGE }}:latest

    - name: Build and push Frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ env.DOCKER_FRONTEND_IMAGE }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 80
        script: |
          cd /building-appraisal-app
          docker compose pull
          docker compose up -d